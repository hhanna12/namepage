{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport namedb from './names';\n/*\njostain syystä returnin li-elementti ei päivitä listaa.\n clogilla se kuitenkin toimii\n*/\n\nconst Buttons = ({\n  amountOrder,\n  toAlphabeticOrder\n}) => {\n  console.log('buttons');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: amountOrder,\n      children: \"Amount order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toAlphabeticOrder,\n      children: \"Alphabetical order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Buttons;\n\nconst Datarow = ({\n  person\n}) => {\n  console.log('datarow');\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [person.name, \" \", person.amount]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Datarow;\n\nconst Total = props => {\n  //return the length of the props list\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Total amount of all names \", props.orderedList.length]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Total;\n\nconst App = () => {\n  _s();\n\n  const nameList = namedb.names;\n  const [orderedList, setOrderedList] = useState(nameList);\n\n  const amountOrder = () => {\n    setOrderedList([]);\n    /* sorting list of name+amount objects by amount. \n     * b.amount is the amount number. \n     * a.amount > b.amount returns boolean\n     * then the sort function check if that's true or false and orders the objects.\n     */\n\n    const sortedAmount = nameList.sort((a, b) => a.amount > b.amount ? 1 : -1);\n    setOrderedList(sortedAmount);\n  };\n\n  const toAlphabeticOrder = () => {\n    setOrderedList([]);\n    const sortedNames = nameList.sort((a, b) => a.name > b.name ? 1 : -1);\n    setOrderedList(sortedNames);\n  };\n\n  const searchThisName = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  };\n\n  console.log('toka lopullinen', orderedList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: amountOrder,\n      children: \"Amount order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toAlphabeticOrder,\n      children: \"Alphabetical order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orderedList.map((person, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [person.name, \" \", person.amount]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Total, {\n        orderedList: orderedList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: searchThisName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"gPbnmkuoB/C3IShOnyVafyZje60=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Buttons\");\n$RefreshReg$(_c2, \"Datarow\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js"],"names":["React","useState","useEffect","namedb","Buttons","amountOrder","toAlphabeticOrder","console","log","Datarow","person","name","amount","Total","props","orderedList","length","App","nameList","names","setOrderedList","sortedAmount","sort","a","b","sortedNames","searchThisName","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport namedb from './names'\n\n/*\njostain syystä returnin li-elementti ei päivitä listaa.\n clogilla se kuitenkin toimii\n*/\n\nconst Buttons = ({ amountOrder, toAlphabeticOrder }) => {\n    console.log('buttons')\n    return (\n        <div>\n            <button onClick={amountOrder}>Amount order</button>\n            <button onClick={toAlphabeticOrder}>Alphabetical order</button>\n        </div>\n    )\n}\n\nconst Datarow = ({ person }) => {\n    console.log('datarow')\n    return (\n        <li>\n            {person.name} {person.amount}\n        </li>\n    )\n}\n\nconst Total = (props) => {\n    //return the length of the props list\n    return (\n        <div>\n            Total amount of all names {props.orderedList.length}\n        </div>\n        )\n}\n\nconst App = () => {\n    const nameList = namedb.names\n    const [ orderedList, setOrderedList ] = useState(nameList)\n    \n\n    const amountOrder = () => {\n        setOrderedList([])\n        /* sorting list of name+amount objects by amount. \n         * b.amount is the amount number. \n         * a.amount > b.amount returns boolean\n         * then the sort function check if that's true or false and orders the objects.\n         */\n         \n        const sortedAmount = nameList.sort((a, b) => (\n            a.amount > b.amount ? 1 : -1\n        )) \n        setOrderedList(sortedAmount)\n    }\n\n    const toAlphabeticOrder = () => {\n        setOrderedList([])\n        const sortedNames = nameList.sort((a, b) => (\n            a.name > b.name ? 1 : -1\n        )) \n        setOrderedList(sortedNames)\n    }\n\n    const searchThisName = () => {\n        return (\n            <div></div>\n        )\n    }\n\n    console.log('toka lopullinen', orderedList)\n    return (\n        <div>\n            <button onClick={amountOrder}>Amount order</button>\n            <button onClick={toAlphabeticOrder}>Alphabetical order</button>\n            <ul>\n                {orderedList.map((person, index) => \n                    <li key={index}>\n                        {person.name} {person.amount}\n                    </li>\n                )}\n            </ul>\n            <div>\n                <Total orderedList={orderedList}/>\n            </div>\n            <div>\n                <input \n                onChange={searchThisName} />\n            </div>\n            <form>\n                <div>\n                    <button type='submit'>Search</button>\n                </div>\n            </form>\n        </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}