{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport namedb from './names';\n\nconst App = () => {\n  _s();\n\n  const nameList = namedb.names;\n  const [orderedList, setOrderedList] = useState([]);\n\n  const amountOrder = () => {\n    setOrderedList([]);\n    /* sorting list of name+amount objects by amount. \n     * b.amount is the amount number. \n     * a.amount > b.amount returns boolean\n     * then the sort function check if that's true or false and orders the objects.\n     */\n\n    const sortedAmount = nameList.sort((a, b) => a.amount > b.amount ? 1 : -1);\n    setOrderedList(sortedAmount);\n  };\n\n  const toAlphabeticOrder = () => {\n    setOrderedList([]);\n    const orderedNames = nameList.sort((a, b) => a.name > b.name ? 1 : -1);\n    setOrderedList(orderedNames);\n  };\n\n  console.log('toka lopullinen', orderedList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: amountOrder,\n      children: \"Amount order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toAlphabeticOrder,\n      children: \"Alphabetical order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orderedList.map((n, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"hei\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"Q1QJOpv1jMe+XKBYhj7x9PS+mQU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js"],"names":["React","useState","namedb","App","nameList","names","orderedList","setOrderedList","amountOrder","sortedAmount","sort","a","b","amount","toAlphabeticOrder","orderedNames","name","console","log","map","n","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,SAAnB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,QAAQ,GAAGF,MAAM,CAACG,KAAxB;AACA,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxBD,IAAAA,cAAc,CAAC,EAAD,CAAd;AAEE;AACR;AACA;AACA;AACA;;AAEQ,UAAME,YAAY,GAAGL,QAAQ,CAACM,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAC/BD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAb,GAAsB,CAAtB,GAA0B,CAAC,CADV,CAArB;AAGAN,IAAAA,cAAc,CAACE,YAAD,CAAd;AACH,GAbD;;AAeA,QAAMK,iBAAiB,GAAG,MAAM;AAC9BP,IAAAA,cAAc,CAAC,EAAD,CAAd;AACE,UAAMQ,YAAY,GAAGX,QAAQ,CAACM,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAC/BD,CAAC,CAACK,IAAF,GAASJ,CAAC,CAACI,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CADN,CAArB;AAGAT,IAAAA,cAAc,CAACQ,YAAD,CAAd;AACH,GAND;;AAQFE,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BZ,WAA/B;AACA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEM,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBACKR,WAAW,CAACa,GAAZ,CAAgB,CAACC,CAAD,EAAIC,KAAJ,kBACjB;AAAA;AAAA,SAASA,KAAT;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaD,CAzCD;;GAAMlB,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport namedb from './names'\n\n\nconst App = () => {\n    const nameList = namedb.names\n    const [ orderedList, setOrderedList ] = useState([]) \n\n    const amountOrder = () => {\n      setOrderedList([])\n\n        /* sorting list of name+amount objects by amount. \n         * b.amount is the amount number. \n         * a.amount > b.amount returns boolean\n         * then the sort function check if that's true or false and orders the objects.\n         */\n         \n        const sortedAmount = nameList.sort((a, b) => (\n            a.amount > b.amount ? 1 : -1\n        )) \n        setOrderedList(sortedAmount)\n    }\n\n    const toAlphabeticOrder = () => {\n      setOrderedList([])\n        const orderedNames = nameList.sort((a, b) => (\n            a.name > b.name ? 1 : -1\n        )) \n        setOrderedList(orderedNames)\n    }\n\n  console.log('toka lopullinen', orderedList)\n  return (\n      <div>\n          <button onClick={amountOrder}>Amount order</button>\n          <button onClick={toAlphabeticOrder}>Alphabetical order</button>\n          <ul>\n              {orderedList.map((n, index) => \n              <li key={index}>\n                  hei\n              </li>\n              )}\n          </ul>\n      </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}