{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport namedb from './names';\n\nconst App = () => {\n  _s();\n\n  const nameList = namedb.names;\n  const [orderedList, setOrderedList] = useState([]);\n\n  const amountOrder = () => {\n    //sorting list of name+amount objects by amount. \n    //b.amount is the amount number. \n    //a.amount > b.amount returns boolean\n    //then the sort function check if that's true or false and orders the objects.\n    const sortedAmount = nameList.sort((a, b) => a.amount > b.amount ? 1 : -1);\n    console.log('sortedAmount', sortedAmount);\n    setOrderedList(sortedAmount);\n  };\n\n  const toAlphabeticOrder = () => {\n    const sortedName = nameList.sort((a, b) => a.name > b.name ? 1 : -1);\n    console.log('sortedname', sortedName);\n    /*const orderedNames = nameList.map(obj => (\n      obj.name\n    )).sort()*/\n\n    setOrderedList(orderedNames);\n  };\n\n  console.log('toka lopullinen', orderedList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: amountOrder,\n      children: \"Amount order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toAlphabeticOrder,\n      children: \"Alphabetical order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: orderedList.map((n, index) => console.log('lopullinen ', n.name, n.amount))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Q1QJOpv1jMe+XKBYhj7x9PS+mQU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js"],"names":["React","useState","namedb","App","nameList","names","orderedList","setOrderedList","amountOrder","sortedAmount","sort","a","b","amount","console","log","toAlphabeticOrder","sortedName","name","orderedNames","map","n","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,SAAnB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGF,MAAM,CAACG,KAAxB;AACA,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxB;AACA;AACA;AACA;AACA,UAAMC,YAAY,GAAGL,QAAQ,CAACM,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KACjCD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAb,GAAsB,CAAtB,GAA0B,CAAC,CADR,CAArB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,YAA5B;AACAF,IAAAA,cAAc,CAACE,YAAD,CAAd;AACD,GAXD;;AAaA,QAAMO,iBAAiB,GAAG,MAAM;AAE9B,UAAMC,UAAU,GAAGb,QAAQ,CAACM,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAC/BD,CAAC,CAACO,IAAF,GAASN,CAAC,CAACM,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CADN,CAAnB;AAGAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,UAA1B;AACA;AACJ;AACA;;AAEIV,IAAAA,cAAc,CAACY,YAAD,CAAd;AACD,GAXD;;AAcAL,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BT,WAA/B;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEQ,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBACGV,WAAW,CAACc,GAAZ,CAAgB,CAACC,CAAD,EAAIC,KAAJ,KACfR,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BM,CAAC,CAACH,IAA7B,EAAmCG,CAAC,CAACR,MAArC,CADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3CD;;GAAMV,G;;KAAAA,G;AA6CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport namedb from './names'\n\n\nconst App = () => {\n  const nameList = namedb.names\n  const [ orderedList, setOrderedList ] = useState([]) \n\n  const amountOrder = () => {\n    //sorting list of name+amount objects by amount. \n    //b.amount is the amount number. \n    //a.amount > b.amount returns boolean\n    //then the sort function check if that's true or false and orders the objects.\n    const sortedAmount = nameList.sort((a, b) => (\n      a.amount > b.amount ? 1 : -1\n    )) \n\n    console.log('sortedAmount', sortedAmount)\n    setOrderedList(sortedAmount)\n  }\n\n  const toAlphabeticOrder = () => {\n    \n    const sortedName = nameList.sort((a, b) => (\n      a.name > b.name ? 1 : -1\n    )) \n    console.log('sortedname', sortedName)\n    /*const orderedNames = nameList.map(obj => (\n      obj.name\n    )).sort()*/\n  \n    setOrderedList(orderedNames)\n  }\n\n\n  console.log('toka lopullinen', orderedList)\n  return (\n    <div>\n      <button onClick={amountOrder}>Amount order</button>\n      <button onClick={toAlphabeticOrder}>Alphabetical order</button>\n      <ul>\n        {orderedList.map((n, index) => \n          console.log('lopullinen ', n.name, n.amount)\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}