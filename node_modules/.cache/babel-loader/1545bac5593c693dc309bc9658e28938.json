{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from 'react-dom';\nimport React, { useState } from 'react';\nimport namedb from './names';\nimport Total from './Total';\nimport Buttons from './Buttons';\n\nconst Titles = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"titles\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"nameTitle\",\n      children: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"amountTitle\",\n      children: \"amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Titles;\n\nconst Datarow = ({\n  person\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"datarow\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: person.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      id: \"amount\",\n      children: person.amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Datarow;\n\nconst Search = ({\n  searchName\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: searchName,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Search;\n\nconst App = () => {\n  _s();\n\n  //unordered list of names\n  const nameList = namedb.names; //list of names that will be sorted\n\n  const [sortedList, setSortedList] = useState(nameList);\n  const [searchedName, setSearchedName] = useState('');\n  const [personObject, setPersonObject] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const toAmountOrder = () => {\n    /* sorting list by amount. \n     * b.amount is the amount number. \n     * a.amount > b.amount returns boolean\n     * then the sort function check if that's true or false and sorts the objects.\n     */\n    const sortedAmount = nameList.sort((a, b) => a.amount < b.amount ? 1 : -1);\n    setSortedList(sortedAmount); //rendering to show the sorted list in UI\n\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), document.getElementById('root'));\n  };\n\n  const toAlphabeticOrder = () => {\n    // Sorting the list in alhabetic order\n    const sortedNames = nameList.sort((a, b) => a.name > b.name ? 1 : -1);\n    setSortedList(sortedNames);\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), document.getElementById('root'));\n  };\n\n  const searchName = event => {\n    /* Search the name and set the object as personObject. \n     * Set error message if name was not found.\n     */\n    event.preventDefault();\n    let found = false;\n    sortedList.filter(function (p) {\n      if (p.name === searchedName) {\n        personObject.name = p.name;\n        personObject.amount = p.amount;\n        found = true;\n        setPersonObject(personObject);\n        setErrorMessage('');\n      } else if (found === false) {\n        setErrorMessage('Name not found');\n        setPersonObject([]);\n      }\n\n      return errorMessage, personObject;\n    });\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), document.getElementById('root'));\n  };\n\n  const changeHandler = event => {\n    setSearchedName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"listArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"total\",\n        children: /*#__PURE__*/_jsxDEV(Total, {\n          sortedList: sortedList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        toAmountOrder: toAmountOrder,\n        toAlphabeticOrder: toAlphabeticOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Titles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sortedList.map((person, index) => /*#__PURE__*/_jsxDEV(Datarow, {\n          person: person\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"info\",\n        children: \"search person by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: changeHandler,\n        placeholder: \"Write name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        searchName: searchName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"showSearch\",\n        children: [personObject.name, \" \", personObject.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"errorMessage\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"ix8vu8KHqNY3vqpFbvlrRLYcQUk=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Titles\");\n$RefreshReg$(_c2, \"Datarow\");\n$RefreshReg$(_c3, \"Search\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js"],"names":["ReactDOM","React","useState","namedb","Total","Buttons","Titles","Datarow","person","name","amount","Search","searchName","App","nameList","names","sortedList","setSortedList","searchedName","setSearchedName","personObject","setPersonObject","errorMessage","setErrorMessage","toAmountOrder","sortedAmount","sort","a","b","render","document","getElementById","toAlphabeticOrder","sortedNames","event","preventDefault","found","filter","p","changeHandler","target","value","map","index"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, { useState } from 'react'\nimport namedb from './names'\nimport Total from './Total'\nimport Buttons from './Buttons'\n\n\nconst Titles = () => {\n    return(\n        <div id='titles'>\n            <div id='nameTitle'>name</div>\n            <div id='amountTitle'>amount</div>\n        </div>\n    )\n}\nconst Datarow = ({ person }) => {\n    return (\n        <div className='datarow'>\n            <li>{person.name}</li>\n            <li id='amount'>{person.amount}</li>\n        </div>\n    )\n}\nconst Search = ({ searchName }) => {\n    return(\n        <form onSubmit={searchName}>\n            <div>\n                <button type='submit'>Search</button>\n            </div>\n        </form>\n    )\n}\n\n\nconst App = () => {\n    //unordered list of names\n    const nameList = namedb.names\n    //list of names that will be sorted\n    const [ sortedList, setSortedList ] = useState(nameList)\n    const [ searchedName, setSearchedName ] = useState('')\n    const [ personObject, setPersonObject ] = useState([])\n    const [ errorMessage, setErrorMessage ] = useState(null)\n  \n\n    const toAmountOrder = () => {\n        /* sorting list by amount. \n         * b.amount is the amount number. \n         * a.amount > b.amount returns boolean\n         * then the sort function check if that's true or false and sorts the objects.\n         */\n         \n        const sortedAmount = nameList.sort((a, b) => (\n            a.amount < b.amount ? 1 : -1\n        )) \n        setSortedList(sortedAmount)\n        //rendering to show the sorted list in UI\n        ReactDOM.render(\n            <App />, document.getElementById('root')\n        )\n    }\n\n\n    const toAlphabeticOrder = () => {\n        // Sorting the list in alhabetic order\n        const sortedNames = nameList.sort((a, b) => (\n            a.name > b.name ? 1 : -1\n        )) \n        setSortedList(sortedNames)\n        ReactDOM.render( \n            <App />, document.getElementById('root') \n        )\n    }\n\n \n    const searchName = (event) => {\n        /* Search the name and set the object as personObject. \n         * Set error message if name was not found.\n         */\n        event.preventDefault()\n        let found = false\n        sortedList.filter(function(p) {\n            if(p.name === searchedName) {\n                personObject.name = p.name\n                personObject.amount = p.amount\n                found = true\n                setPersonObject(personObject)\n                setErrorMessage('')\n            }\n            else if (found === false) {\n                 setErrorMessage('Name not found')\n                 setPersonObject([])\n            }\n            return(errorMessage, personObject)\n        })\n        ReactDOM.render( \n            <App />, document.getElementById('root') \n        )\n    }\n\n    const changeHandler = (event) => {\n        setSearchedName(event.target.value)\n    }\n\n    return (\n        <div>\n            <h1>People</h1>\n            <div id='listArea'>\n                <div id='total'>\n                    <Total sortedList={sortedList}/>\n                </div>\n                <Buttons toAmountOrder={toAmountOrder} toAlphabeticOrder={toAlphabeticOrder}/>\n                <Titles/>\n                <ul>\n                    {sortedList.map((person, index) => \n                        <Datarow person={person} key={index}/>\n                    )}\n                </ul>\n            </div>\n            <div id='search'>\n                <div id='info'>search person by name</div>\n                <input onChange={changeHandler} placeholder='Write name'/>\n                <Search searchName={searchName} />\n                <div id='showSearch'>{personObject.name} {personObject.amount}</div>\n                <div id='errorMessage'>{errorMessage}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}