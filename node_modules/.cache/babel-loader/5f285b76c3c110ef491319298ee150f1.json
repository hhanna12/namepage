{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from 'react-dom';\nimport React, { useState } from 'react';\nimport Buttons from './Buttons';\nimport Datarow from './Datarow';\nimport namedb from './names';\nimport Search from './Search';\nimport Total from './Total';\nimport Titles from './Titles';\n\nconst ListofNames = ({\n  sortedList\n}) => {\n  console.log('sortedList: ', sortedList);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: sortedList.map((person, index) => /*#__PURE__*/_jsxDEV(Datarow, {\n      person: person\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListofNames;\n\nconst App = () => {\n  _s();\n\n  //unordered list of names\n  const nameList = namedb.names; //list of names that will be sorted\n\n  const [sortedList, setSortedList] = useState(nameList);\n  const [searchedName, setSearchedName] = useState('');\n  const [personObject, setPersonObject] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const toAmountOrder = () => {\n    /* sorting list by amount. \n     * b.amount is the amount number. \n     * a.amount > b.amount returns boolean\n     * then the sort function check if that's true or false and sorts the objects.\n     */\n    const sortedAmount = nameList.sort((a, b) => a.amount < b.amount ? 1 : -1);\n    setSortedList(sortedAmount); //rendering to show the sorted list in UI\n\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(ListofNames, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), document.getElementById('root'));\n  };\n\n  const toAlphabeticOrder = () => {\n    // Sorting the list in alhabetic order\n    const sortedNames = nameList.sort((a, b) => a.name > b.name ? 1 : -1);\n    setSortedList(sortedNames);\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(ListofNames, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), document.getElementById('root'));\n  };\n\n  const searchName = event => {\n    /* Search the name and set the object as personObject. \n     * Set error message if name was not found.\n     */\n    event.preventDefault();\n    let found = false;\n    sortedList.filter(function (p) {\n      if (p.name === searchedName) {\n        personObject.name = p.name;\n        personObject.amount = p.amount;\n        found = true;\n        setPersonObject(personObject);\n        setErrorMessage('');\n      } else if (found === false) {\n        setErrorMessage('Name not found');\n        setPersonObject([]);\n      }\n\n      return errorMessage, personObject;\n    });\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), document.getElementById('root'));\n  };\n\n  const changeHandler = event => {\n    setSearchedName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"listArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"total\",\n        children: /*#__PURE__*/_jsxDEV(Total, {\n          sortedList: sortedList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        toAmountOrder: toAmountOrder,\n        toAlphabeticOrder: toAlphabeticOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Titles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListofNames, {\n        sortedList: sortedList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"info\",\n        children: \"search person by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: changeHandler,\n        placeholder: \"Write name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        searchName: searchName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"showSearch\",\n        children: [personObject.name, \" \", personObject.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"errorMessage\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"ix8vu8KHqNY3vqpFbvlrRLYcQUk=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListofNames\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js"],"names":["ReactDOM","React","useState","Buttons","Datarow","namedb","Search","Total","Titles","ListofNames","sortedList","console","log","map","person","index","App","nameList","names","setSortedList","searchedName","setSearchedName","personObject","setPersonObject","errorMessage","setErrorMessage","toAmountOrder","sortedAmount","sort","a","b","amount","render","document","getElementById","toAlphabeticOrder","sortedNames","name","searchName","event","preventDefault","found","filter","p","changeHandler","target","value"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, { useState } from 'react'\nimport Buttons from './Buttons'\nimport Datarow from './Datarow';\nimport namedb from './names'\nimport Search from './Search';\nimport Total from './Total'\nimport Titles from './Titles'\n\n\nconst ListofNames = ({ sortedList }) => {\n    console.log('sortedList: ', sortedList)\n    return (\n        <ul>\n            {sortedList.map((person, index) => \n                <Datarow person={person} key={index}/>\n            )}\n        </ul>\n    )\n}\n\n\nconst App = () => {\n    //unordered list of names\n    const nameList = namedb.names\n    //list of names that will be sorted\n    const [ sortedList, setSortedList ] = useState(nameList)\n    const [ searchedName, setSearchedName ] = useState('')\n    const [ personObject, setPersonObject ] = useState([])\n    const [ errorMessage, setErrorMessage ] = useState(null)\n  \n\n    const toAmountOrder = () => {\n        /* sorting list by amount. \n         * b.amount is the amount number. \n         * a.amount > b.amount returns boolean\n         * then the sort function check if that's true or false and sorts the objects.\n         */\n         \n        const sortedAmount = nameList.sort((a, b) => (\n            a.amount < b.amount ? 1 : -1\n        )) \n        setSortedList(sortedAmount)\n        //rendering to show the sorted list in UI\n        ReactDOM.render(\n            <ListofNames />, document.getElementById('root')\n        )\n    }\n\n\n    const toAlphabeticOrder = () => {\n        // Sorting the list in alhabetic order\n        const sortedNames = nameList.sort((a, b) => (\n            a.name > b.name ? 1 : -1\n        )) \n        setSortedList(sortedNames)\n        ReactDOM.render( \n            <ListofNames />, document.getElementById('root') \n        )\n    }\n\n \n    const searchName = (event) => {\n        /* Search the name and set the object as personObject. \n         * Set error message if name was not found.\n         */\n        event.preventDefault()\n        let found = false\n        sortedList.filter(function(p) {\n            if(p.name === searchedName) {\n                personObject.name = p.name\n                personObject.amount = p.amount\n                found = true\n                setPersonObject(personObject)\n                setErrorMessage('')\n            }\n            else if (found === false) {\n                 setErrorMessage('Name not found')\n                 setPersonObject([])\n            }\n            return(errorMessage, personObject)\n        })\n        ReactDOM.render( \n            <App />, document.getElementById('root') \n        )\n    }\n\n    const changeHandler = (event) => {\n        setSearchedName(event.target.value)\n    }\n\n    return (\n        <div>\n            <h1>People</h1>\n            <div id='listArea'>\n                <div id='total'>\n                    <Total sortedList={sortedList}/>\n                </div>\n                <Buttons toAmountOrder={toAmountOrder} toAlphabeticOrder={toAlphabeticOrder}/>\n                <Titles/>\n                <ListofNames sortedList={sortedList}/>\n            </div>\n            <div id='search'>\n                <div id='info'>search person by name</div>\n                <input onChange={changeHandler} placeholder='Write name'/>\n                <Search searchName={searchName} />\n                <div id='showSearch'>{personObject.name} {personObject.amount}</div>\n                <div id='errorMessage'>{errorMessage}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}