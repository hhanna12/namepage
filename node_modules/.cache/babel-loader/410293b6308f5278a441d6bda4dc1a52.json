{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport namedb from './names';\n/*\njostain syystä returnin li-elementti ei päivitä listaa.\n clogilla se kuitenkin toimii\n*/\n\nconst Buttons = ({\n  amountOrder,\n  toAlphabeticOrder\n}) => {\n  console.log('buttons');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: amountOrder,\n      children: \"Sort by amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toAlphabeticOrder,\n      children: \"Sort by name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Buttons;\n\nconst Datarow = ({\n  person\n}) => {\n  console.log('datarow');\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [person.name, \" \", person.amount]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Datarow;\n\nconst Total = props => {\n  //return the length of the props list\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Total amount of all names \", props.orderedList.length]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Total;\n\nconst Search = ({\n  searchName\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: searchName,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Search;\n\nconst App = () => {\n  _s();\n\n  const nameList = namedb.names;\n  const [orderedList, setOrderedList] = useState(nameList);\n  const [searchedName, setSearchedName] = useState('');\n  const [personObject, setPersonObject] = useState([]);\n\n  const amountOrder = () => {\n    setOrderedList([]);\n    /* sorting list of name+amount objects by amount. \n     * b.amount is the amount number. \n     * a.amount > b.amount returns boolean\n     * then the sort function check if that's true or false and orders the objects.\n     */\n\n    const sortedAmount = nameList.sort((a, b) => a.amount > b.amount ? 1 : -1);\n    setOrderedList(sortedAmount);\n    console.log('sortedamount');\n  };\n\n  const toAlphabeticOrder = () => {\n    setOrderedList([]);\n    const sortedNames = nameList.sort((a, b) => a.name > b.name ? 1 : -1);\n    setOrderedList(sortedNames);\n    console.log('sorted ');\n  };\n\n  const searchName = event => {\n    console.log('searchname');\n    event.preventDefault();\n    orderedList.filter(function (p) {\n      if (p.name === searchedName) {\n        personObject.name = p.name;\n        personObject.amount = p.amount;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"moi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hei\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this);\n  };\n\n  const changeHandler = event => {\n    setSearchedName(event.target.value);\n  };\n\n  console.log('personobj vika', personObject);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"divTable\",\n      className: \"insideContent\",\n      children: [/*#__PURE__*/_jsxDEV(Buttons, {\n        amountOrder: amountOrder,\n        toAlphabeticOrder: toAlphabeticOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: orderedList.map((person, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [person.name, \" \", person.amount]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"total\",\n        children: /*#__PURE__*/_jsxDEV(Total, {\n          orderedList: orderedList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"search\",\n      className: \"insideContent\",\n      className: \"\\\"w3-padding w3-display-topright\\\"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        searchName: searchName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), personObject.name, \" \", personObject.amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"sME+rjztW9OWV9YGkvouTT9yfeg=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Buttons\");\n$RefreshReg$(_c2, \"Datarow\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"Search\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/hanna/Desktop/YLIOPISTO/solita/namepage/src/App.js"],"names":["React","useState","namedb","Buttons","amountOrder","toAlphabeticOrder","console","log","Datarow","person","name","amount","Total","props","orderedList","length","Search","searchName","App","nameList","names","setOrderedList","searchedName","setSearchedName","personObject","setPersonObject","sortedAmount","sort","a","b","sortedNames","event","preventDefault","filter","p","changeHandler","target","value","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport namedb from './names'\n\n/*\njostain syystä returnin li-elementti ei päivitä listaa.\n clogilla se kuitenkin toimii\n*/\n\nconst Buttons = ({ amountOrder, toAlphabeticOrder }) => {\n    console.log('buttons')\n    return (\n        <div>\n            <button onClick={amountOrder}>Sort by amount</button>\n            <button onClick={toAlphabeticOrder}>Sort by name</button>\n        </div>\n    )\n}\nconst Datarow = ({ person }) => {\n    console.log('datarow')\n    return (\n        <li>\n            {person.name} {person.amount}\n        </li>\n    )\n}\nconst Total = (props) => {\n    //return the length of the props list\n    return (\n        <div>\n            Total amount of all names {props.orderedList.length}\n        </div>\n        )\n}\nconst Search = ({ searchName }) => {\n    return(\n        <form onSubmit={searchName}>\n            <div>\n                <button type='submit'>Search</button>\n            </div>\n        </form>\n    )\n}\n\n\nconst App = () => {\n    const nameList = namedb.names\n    const [ orderedList, setOrderedList ] = useState(nameList)\n    const [ searchedName, setSearchedName ] = useState('')\n    const [ personObject, setPersonObject ] = useState([])\n    \n   \n\n    \n    const amountOrder = () => {\n        setOrderedList([])\n        /* sorting list of name+amount objects by amount. \n         * b.amount is the amount number. \n         * a.amount > b.amount returns boolean\n         * then the sort function check if that's true or false and orders the objects.\n         */\n         \n        const sortedAmount = nameList.sort((a, b) => (\n            a.amount > b.amount ? 1 : -1\n        )) \n        setOrderedList(sortedAmount)\n        console.log('sortedamount')\n    }\n    const toAlphabeticOrder = () => {\n        setOrderedList([])\n        const sortedNames = nameList.sort((a, b) => (\n            a.name > b.name ? 1 : -1\n        )) \n        setOrderedList(sortedNames)\n        console.log('sorted ')\n    }\n\n    const searchName = (event) => {\n        console.log('searchname')\n        event.preventDefault()\n        orderedList.filter(function(p) {\n            if(p.name === searchedName) {\n                personObject.name = p.name\n                personObject.amount = p.amount\n                return (<li>moi</li>)\n            }\n        })\n        return( <div>hei</div>)\n    }\n\n    const changeHandler = (event) => {\n        setSearchedName(event.target.value)\n    }\n\n    console.log('personobj vika', personObject)\n    return (\n        <div>\n            <h1>People</h1>\n            <div id='divTable' className='insideContent'>\n                <Buttons amountOrder={amountOrder} toAlphabeticOrder={toAlphabeticOrder}/>\n                <ul>\n                    {orderedList.map((person, index) => \n                        <li key={index}>\n                            {person.name} {person.amount}\n                        </li>\n                    )}\n                </ul>\n                <div id='total'>\n                    <Total orderedList={orderedList}/>\n                </div>\n            </div>\n            <div id='search' className='insideContent' className='\"w3-padding w3-display-topright\"'>\n                <input onChange={changeHandler}/>\n                <Search searchName={searchName} />\n                    {personObject.name} {personObject.amount}\n            </div>\n        </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}